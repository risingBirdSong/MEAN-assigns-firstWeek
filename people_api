const express = require("express");

const app = express();


app.use(express.static(__dirname + "/static"));
app.set('view engine', 'ejs');
app.set('views', __dirname + '/views');

app.use(express.urlencoded({extended: true}));
app.use(express.json());

// require('./server/config/routes.js')(app);

//--------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------
const mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/1955_api_db', {useNewUrlParser: true});
const PeopleSchema = new mongoose.Schema({
  name: String,
})
// create an object to that contains methods for mongoose to interface with MongoDB
const People = mongoose.model('People', PeopleSchema);
//--------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------

app.get('/', (req, res)=>{
  People.find()
  .then((peoples)=>{
    res.json(peoples);
  })
  .catch(err => console.log('an error!', err))
})

app.get('/new/:name', (req, res)=>{
  // const newpeople = new People();
  // newpeople.name = req.params.name;
  People.create(req.params)
  .then(()=>{
    res.redirect('/');
  })
})

app.get('/remove/:name', (req, res) => {
  People.deleteOne({name : req.params.name})
  .then(()=>{
    res.redirect('/');
  })
})

app.get('/:name', (req, res) => {
  People.find({name : req.params.name})
  .then((person)=>{
    res.json(person);
  })
})

app.listen(8000, ()=> console.log('listening on port 8000'))
